% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by Neural Fitting app
% Created 08-Nov-2015 06:27:25
%
% This script assumes these variables are defined:
%
%   variables - input data.
%   vol - target data.

clear;
load('round1TDailyData.mat');
variables=table2array(round1TDailyData(:,[2 3 5 8 12 14]));
vol=table2array(round1TDailyData(:,9));
time=datetime(table2array(round1TDailyData(:,1)));

x = variables';
t = vol';

% Choose a Training Function
% For a list of all training functions type: help nntrain
% 'trainlm' is usually fastest.
% 'trainbr' takes longer but may be better for challenging problems.tsim
% 'trainscg' uses less memory. Suitable in low memory situations.
trainFcn = 'trainbr';  % Bayesian Regularization backpropagation.

% Create a Fitting Network
hiddenLayerSize = 8;
net = fitnet(hiddenLayerSize,trainFcn);

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

% Train the Network
[net,tr] = train(net,x,t);

% Test the Network
y = net(x);
e = gsubtract(t,y);
performance = perform(net,t,y);

% View the Network
% view(net);

% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, ploterrhist(e)
%figure, plotregression(t,y)
%figure, plotfit(net,x,t)

%mape
rowsInTest=find(~isnan(tr.testMask{1}));

inputTestVol = vol(rowsInTest,:);
outputTestVol = y(:,rowsInTest)';
MAPE = mean(abs((outputTestVol-inputTestVol))./inputTestVol)*100;



figure
plot(time,y,time,vol);
legend('Acutal','Predicted');
title(strcat('ANN Model','(MAPE=',num2str(MAPE),'%)'));
ylabel('Gas Consumption (kWh)')


